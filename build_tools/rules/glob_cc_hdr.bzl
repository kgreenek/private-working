# Description:
#   glob_cc_hdr is a rule that is used to create a "glob" header. A "glob" header is an pattern
#   commonly used in third-party libraries, where a single header includes all the other headers
#   in the project.
#   The glob_cc_hdr rule is most useful when writing a BUILD file for an external project, where
#   the "glob" header is generated by the external project's CMakeLists.txt (or other build tool).
#
# Example:
#   Say you are making a build file for a project that has a cc_proto_library rule that creates a
#   TON of generated sources (*.pb.h/cc). This rule can help you generate a glob header that
#   includes all the generated proto headers, like so:
#
#   BUILD:
#     proto_library(
#         name = "my_proto",
#         srcs = ["my.proto"],
#     )
#
#     cc_proto_library(
#         name = "my_cc_proto",
#         deps = [":my_proto"],
#     )
#
#     glob_cc_hdr(
#         name = "msgs_h",
#         prefix_lines = ["// Automatically generated"],
#         targets = [":my_cc_proto"],
#         out = "msgs.h"
#     )
#
#   msgs.h (generated by bazel):
#     // Automatically generated
#     #include <my.pb.h>

def _glob_cc_hdr_impl(ctx):
    output_hdr = ctx.outputs.out
    output_content = "\n".join(ctx.attr.prefix_lines) + "\n"
    for target in ctx.attr.targets:
        path_prefix = ctx.genfiles_dir.path + "/" + target.label.workspace_root + "/"
        src_hdrs = sorted([hdr.path.replace(path_prefix, "")
                           for hdr in target.cc.transitive_headers
                           if hdr.path.startswith(path_prefix)])
        output_content += "\n".join(["#include \"" + hdr + "\"" for hdr in src_hdrs]) + "\n"
    ctx.file_action(output=output_hdr, content=output_content)

glob_cc_hdr = rule(
    implementation=_glob_cc_hdr_impl,
    attrs={
        # These lines are added first to the output header file.
        "prefix_lines": attr.string_list(default=[]),
        "targets": attr.label_list(mandatory=True),
        "out": attr.output(mandatory=True),
    },
    executable=False,
    output_to_genfiles=True,
)
